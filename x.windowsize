0316 KILO int getWindowSize(int ifd, int ofd, int *rows, int *cols) {
0317 KILO     struct winsize ws;
0318 KILO 
0319 KILO     if (ioctl(1, TIOCGWINSZ, &ws) == -1 || ws.ws_col == 0) {
0320 KILO         /* ioctl() failed. Try to query the terminal itself. */
0321 KILO         int orig_row, orig_col, retval;
0322 KILO 
0323 KILO         /* Get the initial position so we can restore it later. */
0324 KILO         retval = getCursorPosition(ifd,ofd,&orig_row,&orig_col);
0325 KILO         if (retval == -1) goto failed;
0326 KILO 
0327 KILO         /* Go to right/bottom margin and get position. */
0328 KILO         if (write(ofd,"\x1b[999C\x1b[999B",12) != 12) goto failed;
0329 KILO         retval = getCursorPosition(ifd,ofd,rows,cols);
0330 KILO         if (retval == -1) goto failed;
0331 KILO 
0332 KILO         /* Restore position. */
0333 KILO         char seq[32];
0334 KILO         snprintf(seq,32,"\x1b[%d;%dH",orig_row,orig_col);
0335 KILO         if (write(ofd,seq,strlen(seq)) == -1) {
0336 KILO             /* Can't recover... */
0337 KILO         }
0338 KILO         return 0;
0339 KILO     } else {
0340 KILO         *cols = ws.ws_col;
0341 KILO         *rows = ws.ws_row;
0342 KILO         return 0;
0343 KILO     }
0344 KILO 
0345 KILO failed:
0346 KILO     return -1;
0347 KILO }
