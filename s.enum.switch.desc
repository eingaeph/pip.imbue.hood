
enter editorreadkey // intercept keystroke events
                    // encode escape sequences 
                    // as (single) byte values

call  read          // read returns escape sequences 

   attempt to read 1 byte 

      case  1 : successful read one byte

         return call success 

      case  0 : unsuccessful read (end of file)

         return 0;

      case -1 : unssucessful read (all other failures)

         call die;

enter success (after successful read of one byte)

      case : c != '\x1b' 

         return c;  // not an escape sequence

      else : return call readMoreBytes

  
enter readMoreBytes
 
    if (read(STDIN_FILENO, &seq[0], 1) != 1) return '\x1b';
    if (read(STDIN_FILENO, &seq[1], 1) != 1) return '\x1b';

   assert (c == '\x1b') 
    
    if (seq[0] == '[') {
      switch (seq[1]) {
        case 'A': return ARROW_UP;       //value set in enum 
        case 'B': return ARROW_DOWN;
        case 'C': return ARROW_RIGHT;
        case 'D': return ARROW_LEFT;
      }
    }

  
