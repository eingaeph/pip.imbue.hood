
lineno 239 0238 KILO int editorReadKey(int fd) {
lineno 240 0239 KILO     int nread;
lineno 241 0240 KILO     char c, seq[3];
lineno 242 0241 KILO     while ((nread = read(fd,&c,1)) == 0);
lineno 243 0242 KILO     if (nread == -1) exit(1);
lineno 244 0243 KILO 
lineno 245 0244 KILO     while(1) {
lineno 246 0245 KILO         switch(c) {
lineno 247 0246 KILO         case ESC:    /* escape sequence */
lineno 248 0247 KILO             /* If this is just an ESC, we'll timeout here. */
lineno 249 0248 KILO             if (read(fd,seq,1) == 0) return ESC;
lineno 250 0249 KILO             if (read(fd,seq+1,1) == 0) return ESC;
lineno 251 0250 KILO 
lineno 252 0251 KILO             /* ESC [ sequences. */
lineno 253 0252 KILO             if (seq[0] == '[') {
lineno 254 0253 KILO                 if (seq[1] >= '0' && seq[1] <= '9') {
lineno 255 0254 KILO                     /* Extended escape, read additional byte. */
lineno 256 0255 KILO                     if (read(fd,seq+2,1) == 0) return ESC;
lineno 257 0256 KILO                     if (seq[2] == '~') {
lineno 258 0257 KILO                         switch(seq[1]) {
lineno 259 0258 KILO                         case '3': return DEL_KEY;
lineno 260 0259 KILO                         case '5': return PAGE_UP;
lineno 261 0260 KILO                         case '6': return PAGE_DOWN;
lineno 262 0261 KILO                         }
lineno 263 0262 KILO                     }
lineno 264 0263 KILO                 } else {
lineno 265 0264 KILO                     switch(seq[1]) {
lineno 266 0265 KILO                     case 'A': return ARROW_UP;
lineno 267 0266 KILO                     case 'B': return ARROW_DOWN;
lineno 268 0267 KILO                     case 'C': return ARROW_RIGHT;
lineno 269 0268 KILO                     case 'D': return ARROW_LEFT;
lineno 270 0269 KILO                     case 'H': return HOME_KEY;
lineno 271 0270 KILO                     case 'F': return END_KEY;
lineno 272 0271 KILO                     }
lineno 273 0272 KILO                 }
lineno 274 0273 KILO             }
lineno 275 0274 KILO 
lineno 276 0275 KILO             /* ESC O sequences. */
lineno 277 0276 KILO             else if (seq[0] == 'O') {
lineno 278 0277 KILO                 switch(seq[1]) {
lineno 279 0278 KILO                 case 'H': return HOME_KEY;
lineno 280 0279 KILO                 case 'F': return END_KEY;
lineno 281 0280 KILO                 }
lineno 282 0281 KILO             }
lineno 283 0282 KILO             break;
lineno 284 0283 KILO         default:
lineno 285 0284 KILO             return c;
lineno 286 0285 KILO         }
lineno 287 0286 KILO     }
lineno 288 0287 KILO }



